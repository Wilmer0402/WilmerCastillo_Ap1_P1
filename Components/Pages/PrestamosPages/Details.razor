@page "/Prestamos/Details/{PrestamosId:int}"
@inject PrestamosService prestamosService
@inject NavigationManager navigation

<PageTitle>Detalles del Prestamo</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        @* Header *@
        <div class="card-header bg-white text-black text-center" style="display: flex; align-items: center; justify-content: center;">
            <h4 style="margin: 0 15px;"><strong>Detalles del Prestamo</strong></h4>
        </div>
    </div>

    @* Body *@
    <div class="card-body">
        <h5><strong>Detalles del Préstamo</strong></h5>
        @if (prestamos != null)
        {
            @* Datos del Prestamo *@
            <div class="mb-1">
                <p class="mb-0"><strong>Préstamo Id:</strong> @prestamos.PrestamosId</p>
            </div>
            <div class="mb-1">
                <p class="mb-0"><strong>Nombre del Deudor:</strong> @prestamos.Deudor</p>
            </div>
            <div class="mb-1">
                <p class="mb-0"><strong>Concepto:</strong> @prestamos.Concepto</p>
            </div>
            <div class="mb-1">
                <p class="mb-0"><strong>Monto:</strong> @prestamos.Monto</p>
            </div>
        }
        else
        {
            <p>No se encontro el prestamo con ID @PrestamosId.</p>
        }
    </div>

    @* Footer *@
    <div class="card-footer">
        <a href="/Prestamos/Index" class="btn btn-secondary text-white bi bi-arrow-left"> Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int PrestamosId { get; set; }

    public Prestamos prestamos { get; set; } = new Prestamos();

    protected override async Task OnInitializedAsync()
    {
        prestamos = await prestamosService.Buscar(PrestamosId);
    }
}
